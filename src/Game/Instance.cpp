#include "Instance.hpp"

namespace game
{
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////// Instance /////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Instance::Instance(int64_t _ID, bool _IsUnique)
		:
		mID(_ID),
		mIsUnique(_IsUnique)
	{	}

	Instance::~Instance()
	{	}

	int64_t Instance::get_id()
	{
		return mID;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///////////////////////////////////////////////////////// Pack ///////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	IPack::IPack(int64_t _ID, int64_t _MaxVolume)
		:
		Instance(_ID, true),
		mMaxVolume(_MaxVolume),
		mVolume(0)
	{	}

	IPack::~IPack()
	{	}

	bool IPack::try_place(Instance & _Inst)
	{
		return (get_id() == _Inst.get_id()) && (mVolume != mMaxVolume);
	}

}